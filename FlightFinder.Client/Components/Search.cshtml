@inject AppState state

<div class="row filter-selects">


    <div class="col col-md-2 filter-builder-label">
        <i class="px-2 glyphicon glyphicon glyphicon-list-alt"></i> Filter Builder:
    </div>
    <div class="col col-md-3 small-pad">
        <select class="form-control" @bind(state.FilterTypeSelected)>
            <option value=@FilterType.Company>Company</option>
            <option value=@FilterType.Sector>Sector</option>
            <option value=@FilterType.Rating>Rating</option>
            <option value=@FilterType.Type>Fund Type</option>
        </select>
    </div>
    <div class="col col-md-5  small-pad">
        <FilterList filterType=@state.FilterTypeSelected />
    </div>
    <div class="col col-md-2 ">
        <button @onclick(() => OnAdd(state.FilterItemSelected)) type="button" class="btn btn-success px-5">
            <span class="glyphicon glyphicon-plus"> </span> Add
        </button>
    </div>
</div>


<div class="row">
    <div class="col col-md-10 offset-md-1 pt-2">

        @foreach (KeyValuePair<FilterType, List<string>> entry in state.SelectedFilters)
        {
            <div class="alert alert-warning fade in alert-dismissible">
                <a href="#" @onclick(() => OnRemove(entry.Key)) class="close" data-dismiss="alert" aria-label="Remove Filter" title="Remove Filter">×</a>
                <strong>@entry.Key.ToDisplayString()</strong> @string.Join(",", @entry.Value)
            </div>
        }
    </div>

</div>


<!-- Class / search -->
<div class="row ">

    <div class="col col-md-2 offset-md-10">
        <button @onclick(() => OnSearch(criteria)) type="button" class="btn btn-success px-5">
            <span class="glyphicon glyphicon-search"> </span> Search
        </button>
    </div>
</div>
@*<div id="log">
    <h3>Log (@state.LogItems.Count)</h3>
    <ul>
        @foreach (var item in state.LogItems)
        {
            <li>@item</li>
        }
    </ul>
</div>*@
@functions
{
    public Func<SearchCriteria, Task> OnSearch { get; set; }

    public Func<string, Task> OnAdd { get; set; }

    public Func<FilterType, Task> OnRemove { get; set; }

    private SearchCriteria criteria = new SearchCriteria("LHR", "SEA");

    //  private Filter selectedFilter = new Filter("CMP", "Company");
}
