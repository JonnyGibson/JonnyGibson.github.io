@inject AppState state



<div class="col">

    <div class="row">   
        <div class="col col-md-6 ">
            <div class="form-inline">          
                <div class="input-group">
                    <div class="input-group-prepend">
                        <div class="input-group-text"><i class="px-2">📑</i>Filter Options:</div>
                    </div>
                    <select  @bind(state.FilterTypeSelected)>
                        <option value=@FilterType.Company>Company</option>
                        <option value=@FilterType.Sector>Sector</option>
                        <option value=@FilterType.Rating>Rating</option>
                        <option value=@FilterType.Type>Fund Type</option>
                    </select>
                    <!--need to change second drop down based on type selected-->
                    <select @bind(state.FilterTypeSelected)>
                        <option value=@FilterType.Company>Company</option>
                        <option value=@FilterType.Sector>Sector</option>
                        <option value=@FilterType.Rating>Rating</option>
                        <option value=@FilterType.Type>Fund Type</option>
                    </select>
                </div>
            </div>
        </div>
    </div>






    <!-- Airport selection -->
    <div class="row py-1">
        <!-- From airport -->
        <div class="col pr-0 ">
            <div class="form-control d-flex">
                <div><i class="glyphicon-filter"></i>&nbsp;&nbsp;Company:</div>
                <c list="airports" placeholder="..." @bind(criteria.FromAirport) />
            </div>
        </div>
        <div class="col px-2 py-1 align-self-end arrow"></div>

        <!-- To airport -->
        <div class="col pl-0">
            <div class="form-control d-flex">
                <div><i>📑</i>&nbsp;&nbsp;Sector:</div>
                <input list="airports" placeholder="..." @bind(criteria.ToAirport) />
            </div>
        </div>
    </div>

    <!-- Departure / arrival dates -->
    <div class="row py-1">
        <!-- Depart date -->
        <div class="col pr-0">
            <div class="form-control d-flex">
                <div><i>🌟</i>&nbsp;&nbsp;Rating:</div>
                <input type="date" @bind(criteria.OutboundDate, "yyyy-MM-dd") />
            </div>
        </div>
        <div class="col px-2 py-1 align-self-end arrow"></div>

        <!-- Arrive date -->
        <div class="col pl-0">
            <div class="form-control d-flex">
                <div><i>🔰</i>&nbsp;&nbsp;Fund Type:</div>
                <input type="date" @bind(criteria.ReturnDate, "yyyy-MM-dd") />
            </div>
        </div>
    </div>

    <!-- Class / search -->
    <div class="row py-1 d-flex px-3">
        <div>
            <select class="custom-select" @bind(criteria.TicketClass)>
                <option value=@TicketClass.Economy>Economy</option>
                <option value=@TicketClass.PremiumEconomy>Premium Economy</option>
                <option value=@TicketClass.Business>Business</option>
                <option value=@TicketClass.First>First</option>
            </select>
        </div>
        <div class="ml-auto">
            <button @onclick(() => OnSearch(criteria)) type="button" class="btn btn-danger px-5">
                Search ➝
            </button>
        </div>
    </div>
</div>
<AirportsList />


@functions
{
public Func<SearchCriteria, Task> OnSearch { get; set; }

private SearchCriteria criteria = new SearchCriteria("LHR", "SEA");

//  private Filter selectedFilter = new Filter("CMP", "Company");
}
