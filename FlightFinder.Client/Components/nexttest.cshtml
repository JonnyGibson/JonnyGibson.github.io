@inject HttpClient Http
@inject AppState state

<ul>
    @Name
    @foreach (var item in log)
    {
        <li>@item</li>
    }
</ul>


@functions
{
    public string Name { get; set; }

    private List<string> log = new List<string>();
    private void Log(string message) => log.Add($"{DateTime.UtcNow.ToString("O")} - {message}");

    protected override void OnInit() => Log("OnInit");

    protected override async Task OnInitAsync()
    {
        Log("OnInitAsync starting");
        Log($"Init set :{Name}");

        await Task.Delay(1000);


        Log("OnInitAsync finished");
    }

    private Airport[] airports = Array.Empty<Airport>();
    FilterLookupItem[] filterList = Array.Empty<FilterLookupItem>();
    private async Task Update()
    {
        Log($"OnParametersSet Async Start: {Name}");

        var t = Http.GetJsonAsync<Airport[]>("/api/airports")
          .ContinueWith(x =>
           {
               airports = x.Result;
               Log($"aiports : {airports.ToList().Count}");
               StateHasChanged();

           });
        var p = Http.GetJsonAsync<FilterLookupItem[]>("/api/airports/filters")
           .ContinueWith(x =>
           {
               filterList = x.Result;
               Log($"filters : {filterList.ToList().Count}");
               StateHasChanged();

           });


        //Log($"Starting filters request");
        //var filtersString = "not set";
        //filtersString = await  Http.GetStringAsync($"/api/filters?filtertype={Name}");
        //Log($"filters string: {filtersString}");

        //var filterListNew = await  Http.GetJsonAsync<FilterLookupItem[]>($"/api/airports/filters");
        //Log($"FilterListNEW: {filterListNew.ToString()}");


        // filterList = await  Http.GetJsonAsync<FilterLookupItem[]>($"/api/filters?filtertype={Name}");
        //  Log($"FilterListCount: {filterList.ToList().Count}");

        Log("OnParmeterSetDone");

    }



    protected override void OnParametersSet() =>  Log("OnParametersSet");
    protected override async Task OnParametersSetAsync() =>  await Update();


}
